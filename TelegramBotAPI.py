import telebot
from telebot import types
from Core.ParserLMS import *
from Core.Session import *
from Sqlite import Database

# –¢–æ–∫–µ–Ω –¥–ª—è –±–æ—Ç–∞ –æ—Ç BotFather
TOKEN = '7706937394:AAEO4HWY8RubKHlnQbJRL51zVhThg89Du0o'

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞
bot = telebot.TeleBot('7706937394:AAEO4HWY8RubKHlnQbJRL51zVhThg89Du0o')

db = Database() # –°–æ–∑–¥–∞–ª–∏ —ç–∫–∑–µ–º–ø–ª—è—Ä –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
session = SessionLMS(); # –ó–∞–ø—É—Å–∫ —Å–µ—Å—Å–∏–∏

# # –•—Ä–∞–Ω–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö
# user_data = {}  # {chat_id: {'state': '...', 'login': '...', 'password': '...'}}

# --- –§—É–Ω–∫—Ü–∏–∏ —Å–æ–∑–¥–∞–Ω–∏—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä ---

def get_main_menu():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn_login = types.KeyboardButton("üîê –í–æ–π—Ç–∏ –≤ –õ–ú–°")
    btn_faq = types.KeyboardButton("‚ùì FAQ")
    btn_commands = types.KeyboardButton("üìã –°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥")
    markup.add(btn_login, btn_faq, btn_commands)
    return markup

def get_logged_in_menu():
    markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
    btn_logout = types.KeyboardButton("üö™ –í—ã–π—Ç–∏ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞")
    btn_deadlines = types.KeyboardButton("üìÖ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–µ–¥–ª–∞–π–Ω—ã")
    btn_faq = types.KeyboardButton("‚ùì FAQ")
    btn_commands = types.KeyboardButton("üìã –°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥")
    markup.add(btn_logout, btn_deadlines, btn_faq, btn_commands)
    return markup

# –ø–µ—Ä–µ–¥–µ–ª–∞—Ç—å –ø–æ–¥ –≤—ã–≤–æ–¥ –∑–∞–¥–∞–Ω–∏–π –ø–æ –Ω–µ–¥–µ–ª—è–º
# def get_reminder_menu():
#     markup = types.ReplyKeyboardMarkup(resize_keyboard=True)
#     btn_3_days = types.KeyboardButton("üìÖ –ó–∞ 3 –¥–Ω—è")
#     btn_1_day = types.KeyboardButton("üìÖ –ó–∞ 1 –¥–µ–Ω—å")
#     btn_1_hour = types.KeyboardButton("‚è∞ –ó–∞ 1 —á–∞—Å")
#     btn_back = types.KeyboardButton("‚Ü©Ô∏è –ù–∞–∑–∞–¥")
#     markup.add(btn_3_days, btn_1_day, btn_1_hour, btn_back)
#     return markup

# --- –ö–æ–º–∞–Ω–¥—ã –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∞ –Ω–∞–∂–∞—Ç–∏–π ---

@bot.message_handler(commands=['start'])
def send_welcome(message):
    chat_id = message.chat.id
    db.AddUserData(chat_id,status='logged_out') # –î–æ–±–∞–≤–∏–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –¢—É—Ç –∏–º–µ–Ω–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö, –∞ –Ω–µ –æ–±–Ω–∞–≤–ª–µ–Ω–∏–µ —É–∂–µ –∏–º–µ—é—â–∏—Ö—Å—è –≤ –ë–î
    #user_data[chat_id] = {'state': 'logged_out'}
    bot.send_message(chat_id, "–ü—Ä–∏–≤–µ—Ç! üëã\n\n–≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ —Å–ª–µ–¥–∏—Ç—å –∑–∞ –¥–µ–¥–ª–∞–π–Ω–∞–º–∏ –∏ —É–ø—Ä–∞–≤–ª—è—Ç—å —É—á—ë—Ç–Ω–æ–π –∑–∞–ø–∏—Å—å—é –õ–ú–°.\n–ù–∞–∂–º–∏—Ç–µ –Ω–∞ –Ω—É–∂–Ω—É—é –∫–Ω–æ–ø–∫—É –Ω–∏–∂–µ.", reply_markup=get_main_menu())

# --- –û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å–µ—Ö —Å–æ–æ–±—â–µ–Ω–∏–π ---
@bot.message_handler(func=lambda message: True)
def handle_messages(message):
    chat_id = message.chat.id
    text = message.text.strip()

    user_data = db.GetUserStatus(chat_id) # –ü—ã—Ç–∞–µ–º—Å—è –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    if user_data == None: # –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –±—ã–ª —Å–æ–∑–¥–∞–Ω –º–µ—Ç–æ–¥ –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç None
        db.AddUserData(chat_id,status='logged_out') # –î–æ–±–∞–≤–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è. –¢—É—Ç –∏–º–µ–Ω–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –Ω–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö, –∞ –Ω–µ –æ–±–Ω–∞–≤–ª–µ–Ω–∏–µ —É–∂–µ –∏–º–µ—é—â–∏—Ö—Å—è –≤ –ë–î
        current_state = db.GetUserStatus(chat_id) # –ü–æ–ª—É—á–∞–µ–º –µ–≥–æ —Å—Ç–∞—Ç—É—Å
    else:
        current_state = db.GetUserStatus(chat_id) # –ï—Å–ª–∏ –∂–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª –±—ã–ª, —Ç–æ —Å—Ä–∞–∑—É –∂–µ –ø–æ–ª—É—á–∞–µ–º —Å—Ç–∞—Ç—É—Å

    # --- –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é –æ–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ—Å—Ç–æ—è–Ω–∏–π (–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –≤–æ—à—ë–ª) ---
    #–î–∞–ª–µ–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—Ç—Ä–æ–≥–∞ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω, –ø–æ—ç—Ç–æ–º—É –º–æ–∂–Ω–æ –æ–±–Ω–æ–≤–ª—è—Ç—å –¥–∞–Ω–Ω—ã–µ –≤ –º–µ—Ç–æ–¥–µ AddUserData, –∑–∞–ø—Ä–∞—à–∏–≤–∞—è —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ –∏–∑ –±–¥
    if current_state == 'logged_out':
        if text == "üîê –í–æ–π—Ç–∏ –≤ –õ–ú–°":
            AllData = db.GetAllUserData(chat_id) # –ü–æ–ª—É—á–∏–ª–∏ —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–¥
            db.AddUserData(chat_id,status = 'awaiting_login',login = AllData['login'], password = AllData['password']) # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–ª—å–∑–≤–∞—Ç–µ–ª—è
            bot.send_message(chat_id, "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –ª–æ–≥–∏–Ω:")

        elif text == "‚ùì FAQ":
            bot.send_message(chat_id, "–ó–¥–µ—Å—å –±—É–¥–µ—Ç —Ç–µ–∫—Å—Ç —Å —á–∞—Å—Ç–æ –∑–∞–¥–∞–≤–∞–µ–≤—ã–º–∏ –≤–æ–ø—Ä–æ—Å–∞–º–∏ –∏ –æ—Ç–≤–µ—Ç–∞–º–∏.")

        elif text == "üìã –°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥":
            show_commands(chat_id)

        else:
            bot.send_message(chat_id, "–ù–µ –ø–æ–Ω—è–ª –≤–∞—Å. –í–æ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:", reply_markup=get_main_menu())

    # --- –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è: –≤–≤–æ–¥ –ª–æ–≥–∏–Ω–∞ ---

    elif db.GetUserStatus(chat_id) == 'awaiting_login':
        AllData = db.GetAllUserData(chat_id) # –ü–æ–ª—É—á–∏–ª–∏ —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–¥
        db.AddUserData(chat_id, status='awaiting_password', login=text, password = AllData['password']) #–û–±–Ω–æ–≤–∏–ª–∏ —Å—Ç–∞—Ç—É—Å –∏ –ª–æ–≥–∏–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        bot.send_message(chat_id, "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –ø–∞—Ä–æ–ª—å:")

    # --- –ê–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—è: –≤–≤–æ–¥ –ø–∞—Ä–æ–ª—è ---
    elif db.GetUserStatus(chat_id) == 'awaiting_password':
        AllData = db.GetAllUserData(chat_id) # –ü–æ–ª—É—á–∏–ª–∏ —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–¥
        db.AddUserData(chat_id, status='awaiting_password',login = AllData['login'], password = text) # –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –ø–æ–ª—É—á–µ–Ω–Ω—ã–π –ø–∞—Ä–æ–ª—å –≤ –ë–î (–æ–±–Ω–æ–≤–ª—è–µ–º –µ–≥–æ –∑–Ω–∞—á–µ–Ω–∏–µ)
        
        try:
            x = ParserLMS(session,chat_id,db); 
            arr = x.Parsing(); # –ü–µ—Ä–≤–∞—è —Å—Ç–∞–¥–∏—è –ø–∞—Ä—Å–∏–Ω–≥–∞ - –ø–æ–ª—É—á–µ–Ω–∏—è –º–∞—Å—Å–∏–≤–∞ html –∫–æ–¥–æ–≤ –∑–∞ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å 
            task_days = x.IsExistTask(arr) # –í—Ç–æ—Ä–∞—è —á–∞—Å—Ç—å –ø–∞—Ä—Å–∏–Ω–≥–∞ - –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–∏–ø–∞ –¥–Ω—è

            global dayWithFullTask
            dayWithFullTask = x.ParseDateAboutAllDay(task_days) # –¢—Ä–µ—Ç—å—è —á–∞—Å—Ç—å –ø–∞—Ä—Å–∏–Ω–≥–∞ - –ø–∞—Ä—Å–∏–Ω–≥ –∏ –Ω–∞ –≤—ã—Ö–æ–¥–µ –ø–æ–ª—É—á–µ–Ω–∏–µ –º–∞—Å—Å–∏–≤–∞ –æ–±—ä–µ–∫—Ç–æ–≤ Day
            
                    # –¢–æ–ª—å–∫–æ –≤ —Å–ª—É—á–∞–µ —É—Å–ø–µ—Ö–∞, —Ç.–µ. –µ—Å–ª–∏ –Ω–µ—Ç –æ—à–∏–±–∫–∏ –≤ –ø–∞—Ä—Å–∏–Ω–≥–µ
            bot.send_message(chat_id, f"‚úÖ –í—ã —É—Å–ø–µ—à–Ω–æ –≤–æ—à–ª–∏ –≤ –∞–∫–∫–∞—É–Ω—Ç *{db.GetAllUserData(chat_id)['login']}*", parse_mode='Markdown')

            AllData = db.GetAllUserData(chat_id) # –ü–æ–ª—É—á–∏–ª–∏ —Ç–µ–∫—É—â–∏–µ –¥–∞–Ω–Ω—ã–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–¥
            db.AddUserData(chat_id, status='logged_in', login = AllData['login'], password = AllData['password'])
            bot.send_message(chat_id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=get_logged_in_menu())

            session.ResetSession()


        except Exception as u:
            bot.send_message(chat_id, "–í–Ω–∏–º–∞–Ω–∏–µ!\n–í–≤–µ–¥–µ–Ω—ã –Ω–µ–¥–µ–π—Å—Ç–≤–∏—Ç–µ–ª—å–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ –ª–æ–≥–∏–Ω–∞ –∏ –ø–∞—Ä–æ–ª—è. –ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –ø–æ–≤—Ç–æ—Ä–Ω–æ –≤–≤–µ–¥–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ, –∏—Å–ø–æ–ª—å–∑—É—è —Å–æ–æ—Ç–≤–µ—Ç—Å–≤—É—é—â—É—é —Ñ—É–Ω–∫—Ü–∏—é")
            db.AddUserData(chat_id, status='logged_out', login = None,password = None)

            print (u)


    # --- –ú–µ–Ω—é –ø–æ—Å–ª–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏ ---
    elif db.GetUserStatus(chat_id) == 'logged_in':
        if text == "üìÖ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–µ–¥–ª–∞–π–Ω—ã":
            y = ParserLMS(session,chat_id,db); 
            arr = y.Parsing(); # –ü–µ—Ä–≤–∞—è —Å—Ç–∞–¥–∏—è –ø–∞—Ä—Å–∏–Ω–≥–∞ - –ø–æ–ª—É—á–µ–Ω–∏—è –º–∞—Å—Å–∏–≤–∞ html –∫–æ–¥–æ–≤ –∑–∞ –∫–∞–∂–¥—ã–π –¥–µ–Ω—å 
            task_days = y.IsExistTask(arr) # –í—Ç–æ—Ä–∞—è —á–∞—Å—Ç—å –ø–∞—Ä—Å–∏–Ω–≥–∞ - –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç–∏–ø–∞ –¥–Ω—è

            
            dayWithFullTask = y.ParseDateAboutAllDay(task_days) # –¢—Ä–µ—Ç—å—è —á–∞—Å—Ç—å –ø–∞—Ä—Å–∏–Ω–≥–∞ - –ø–∞—Ä—Å–∏–Ω–≥ –∏ –Ω–∞ –≤—ã—Ö–æ–¥–µ –ø–æ–ª—É—á–µ–Ω–∏–µ –º–∞—Å—Å–∏–≤–∞ –æ–±—ä–µ–∫—Ç–æ–≤ Day
            global result
            result = y.DevisionByWeek(dayWithFullTask)
            session.ResetSession()

            
            arr = ChoosePrintOFWeek(chat_id, result, dayWithFullTask)
            global counterWeeks
            counterWeeks=arr[0]
            markup = arr[1]
            bot.send_message(chat_id, "–í—ã–±–µ—Ä–∏—Ç–µ –Ω–µ–¥–µ–ª—é:", reply_markup=markup)
            


        elif text == "üö™ –í—ã–π—Ç–∏ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞":
            db.AddUserData(chat_id, status='logged_out', login=None, password=None) # –ó–∞—Ç–∏—Ä–∞–µ–º –¥–∞–Ω–Ω—ã–µ –ª–æ–≥–∏–Ω–∞ –∏ –ø–∞—Ä–æ–ª—è (–ø—Ä–∏ —ç—Ç–æ–º –Ω–µ —É–¥–∞–ª—è–µ–º —Å–∞–º–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –∏–∑ –±–¥)
            session.ResetSession()
            bot.send_message(chat_id, "üö™ –í—ã –≤—ã—à–ª–∏ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞.", reply_markup=get_main_menu())

        elif text == "‚ùì FAQ":
            bot.send_message(chat_id, "–ó–¥–µ—Å—å –±—É–¥–µ—Ç —Ç–µ–∫—Å—Ç —Å —á–∞—Å—Ç—ã–º–∏ –≤–æ–ø—Ä–æ—Å–∞–º–∏ –∏ –æ—Ç–≤–µ—Ç–∞–º–∏.")

        elif text == "üìã –°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥":
            show_commands(chat_id)

        elif text in  counterWeeks:   
            week_index = counterWeeks.index(message.text)
            for task in result[week_index]:
                bot.send_message(chat_id, task)

            bot.send_message(chat_id, "–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:", reply_markup=get_logged_in_menu())

        else:
            bot.send_message(chat_id, "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞. –ü–æ–∫–∞–∑—ã–≤–∞—é —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥:", reply_markup=get_logged_in_menu())


    # --- –†–µ–∑–µ—Ä–≤–Ω—ã–π —Å–ª—É—á–∞–π ---
    else:
        bot.send_message(chat_id, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –Ω–∞—á–∞—Ç—å –∑–∞–Ω–æ–≤–æ —Å /start")


# --- –§—É–Ω–∫—Ü–∏—è –ø–æ–∫–∞–∑–∞ —Å–ø–∏—Å–∫–∞ –∫–æ–º–∞–Ω–¥ ---
def show_commands(chat_id):
    bot.send_message(chat_id, """
üìÑ –°–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥:
- üîê –í–æ–π—Ç–∏ –≤ –õ–ú–° ‚Äî –≤–æ–π—Ç–∏ –≤ —Å–∏—Å—Ç–µ–º—É –æ–±—É—á–µ–Ω–∏—è
- üìÖ –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å –¥–µ–¥–ª–∞–π–Ω—ã ‚Äî –ø–æ–ª—É—á–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –±–ª–∏–∂–∞–π—à–∏—Ö –∑–∞–¥–∞—á–∞—Ö
- üö™ –í—ã–π—Ç–∏ –∏–∑ –∞–∫–∫–∞—É–Ω—Ç–∞ ‚Äî –∑–∞–≤–µ—Ä—à–∏—Ç—å —Å–µ—Å—Å–∏—é
- ‚ùì FAQ ‚Äî –ø–æ–ª—É—á–∏—Ç—å –ø–æ–ª–µ–∑–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é
- üìã –°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ ‚Äî –≤—ã–∑–≤–∞—Ç—å —ç—Ç–æ –º–µ–Ω—é
    """)

def ChoosePrintOFWeek(chat_id, arrayWeeks, arrayOfTasks):
    counterButton = len(arrayWeeks);

    counterWeeks= []

    for item in arrayWeeks:
        counterWeeks.append(f'–ù–µ–¥–µ–ª—è —Å {str(item[0]._data.split(" ")[1])} {str(item[0]._data.split(" ")[2])} –¥–æ {str(item[-1]._data.split(" ")[1])} {str(item[-1]._data.split(" ")[2])}')


    markup = types.ReplyKeyboardMarkup(resize_keyboard=True,one_time_keyboard=True)
    for week in counterWeeks:
        markup.add(types.KeyboardButton(week))
    
    

    return [counterWeeks, markup]

    


# --- –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞ ---
print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω..")
bot.polling(none_stop=True)